#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from socket import gethostname
from time import time
from argparse import ArgumentParser
from collections import namedtuple


def get_interfaces(exclude=None):
    interface = namedtuple('Interface',
                           'rxBytes rxPackets rxErrors rxDrops rxFifo rxFrame rxCompressed rxMulticast '
                           'txBytes txPackets txErrors txDrops txFifo txColls txCarrier txCompressed')

    with open('/proc/net/dev') as f:
        while True:
            try:
                line = f.next().split()
            except StopIteration:
                break

            name = line[0][:-1] if line[0].endswith(':') else None

            if name and name not in (exclude or []):
                with open('/sys/class/net/{}/operstate'.format(name)) as operstate:
                    if operstate.read().strip() in ['up', 'unknown']:
                        yield name.replace('.','#vlan'), interface(*line[1:])


def main(prefix=None, exclude=None):
    timestamp = int(time())
    tpl = '{prefix}.interface.{interface}.{key} {value} {timestamp}'

    for name, interface_stats in get_interfaces(exclude):
        for key, value in interface_stats._asdict().iteritems():
            print(tpl.format(prefix=prefix,
                             interface=name,
                             key=key,
                             value=value,
                             timestamp=timestamp))


if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('--scheme', default=gethostname(), help='Metric naming scheme (default: %(default)s)')
    parser.add_argument('--exclude', nargs='+', metavar='interface', help='Exclude interfaces')
    args = parser.parse_args()
    main(prefix=args.scheme, exclude=args.exclude)
